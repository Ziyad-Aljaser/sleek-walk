import { useState } from 'react';
import { auth, googleProvider } from '../config/firebase';
import {
  createUserWithEmailAndPassword,
  signInWithEmailAndPassword,
  signInWithPopup,
  signOut,
} from "firebase/auth";


export const useAuth = () => {
  const [error, setError] = useState(null);
  const [isAuthenticated, setIsAuthenticated] = useState(false);

  const signIn = async (email, password) => {
    try {
      await createUserWithEmailAndPassword(auth, email, password);
      setIsAuthenticated(true); // Set to true on successful signup
      setError(null);
      console.log("Signedup with Email successfully.");
    } catch (err) {
      setError(err.message);
      console.error('Error signning up:', err.message);
    }
  };

  const signInWithGoogle = async () => {
    try {
      await signInWithPopup(auth, googleProvider);
      setIsAuthenticated(true); // Set to true on successful signup
      setError(null);
      console.log("Signedup with Google successfully.");
    } catch (err) {
      setError(err.message);
      console.error('Error signning up:', err.message);
    }
  };

  const logout = async () => {
    try {
      await signOut(auth);
      setIsAuthenticated(false); // Set to false on successful logout
      setError(null);
      console.log("Logged out successfully.");
    } catch (err) {
      setError(err.message);
      console.error('Error logging out:', err.message);
    }
  };

  const login = async (email, password) => {
    try {
      await signInWithEmailAndPassword(auth, email, password);
      setIsAuthenticated(true); // Set to true on successful login
      setError(null);
      console.log('Logged in successfully.');
    } catch (err) {
      setError(err.message);
      console.error('Error logging in:', err.message);
    }
  };

  return { signIn, signInWithGoogle, logout, login, error, isAuthenticated, setIsAuthenticated };
};
